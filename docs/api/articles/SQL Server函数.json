{"title":"SQL Server函数","slug":"SQL Server函数","date":"2022-09-26T08:12:36.721Z","updated":"2023-04-18T06:00:24.550Z","comments":true,"path":"api/articles/SQL Server函数.json","excerpt":null,"covers":"https://picx.zhimg.com/v2-499cbcaf31cf035a9850972edb24939f_1440w.jpg","content":"<h2 id=\"sql-server行转列\"><a href=\"#sql-server行转列\" class=\"headerlink\" title=\"sql server行转列\"></a>sql server行转列</h2><p>类似MySQL group_concat()使用stuff()</p>\n<p>stuff()将字符串插入到另一个字符串中。它从第一个字符串的开始位置删除指定长度的字符；然后将第二个字符串插入到第一个字符串的开始位置。</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> stuff<span class=\"token punctuation\">(</span><span class=\"token string\">'ABCDEFG'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span>hijk<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> AhijkEFG\n<span class=\"token keyword\">SELECT</span> id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">value</span> <span class=\"token operator\">=</span> stuff<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token string\">','</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">value</span> <span class=\"token keyword\">FROM</span> <span class=\"token keyword\">temp</span> t <span class=\"token keyword\">WHERE</span> t<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> <span class=\"token keyword\">temp</span><span class=\"token punctuation\">.</span>id <span class=\"token keyword\">FOR</span> xml path<span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> <span class=\"token keyword\">temp</span> <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> id\n\n<span class=\"token comment\">-- 实例</span>\n<span class=\"token keyword\">SELECT</span> t<span class=\"token punctuation\">.</span>unit_id<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">.</span>value_param<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">.</span>code_param<span class=\"token punctuation\">,</span>conf<span class=\"token punctuation\">.</span>state\n<span class=\"token keyword\">FROM</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> \nunit_id<span class=\"token punctuation\">,</span>\nSTUFF<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token string\">','</span> <span class=\"token operator\">+</span> val1 <span class=\"token keyword\">FROM</span> gs_pss_config b <span class=\"token keyword\">WHERE</span> b<span class=\"token punctuation\">.</span>unit_id <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>unit_id <span class=\"token operator\">AND</span> b<span class=\"token punctuation\">.</span>conf_type <span class=\"token operator\">=</span> <span class=\"token comment\">#&#123;conf_type&#125; FOR xml path('')),1,1,'')AS value_param,</span>\nSTUFF<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token string\">','</span> <span class=\"token operator\">+</span> param_code <span class=\"token keyword\">FROM</span>\tgs_pss_config c\t<span class=\"token keyword\">WHERE</span> c<span class=\"token punctuation\">.</span>unit_id <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>unit_id\t<span class=\"token operator\">AND</span> c<span class=\"token punctuation\">.</span>conf_type <span class=\"token operator\">=</span> <span class=\"token comment\">#&#123;conf_type&#125; FOR xml path('')),1,1,'')AS code_param</span>\n<span class=\"token keyword\">FROM</span>\ngs_pss_config a\n<span class=\"token keyword\">WHERE</span> a<span class=\"token punctuation\">.</span>conf_type <span class=\"token operator\">=</span> <span class=\"token comment\">#&#123;conf_type&#125; GROUP BY a.unit_id)t</span>\n<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> \ngs_yctp_unit_config conf <span class=\"token keyword\">on</span> t<span class=\"token punctuation\">.</span>unit_id <span class=\"token operator\">=</span> conf<span class=\"token punctuation\">.</span>unit_id <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h2 id=\"统计数据考核密度\"><a href=\"#统计数据考核密度\" class=\"headerlink\" title=\"统计数据考核密度\"></a>统计数据考核密度</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> s<span class=\"token punctuation\">.</span>real_tag<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">.</span>tag_name<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">.</span>unit_id<span class=\"token punctuation\">,</span>\n<span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">case</span> <span class=\"token keyword\">when</span> s<span class=\"token punctuation\">.</span>density <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token keyword\">then</span> <span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span> <span class=\"token keyword\">end</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> density0<span class=\"token punctuation\">,</span>\n<span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">case</span> <span class=\"token keyword\">when</span> s<span class=\"token punctuation\">.</span>density <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">and</span> s<span class=\"token punctuation\">.</span>density <span class=\"token operator\">&lt;=</span><span class=\"token number\">20</span> <span class=\"token keyword\">then</span> <span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span> <span class=\"token keyword\">end</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> density20<span class=\"token punctuation\">,</span>\n<span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">case</span> <span class=\"token keyword\">when</span> s<span class=\"token punctuation\">.</span>density <span class=\"token operator\">></span> <span class=\"token number\">20</span> <span class=\"token operator\">and</span> s<span class=\"token punctuation\">.</span>density <span class=\"token operator\">&lt;=</span><span class=\"token number\">50</span> <span class=\"token keyword\">then</span> <span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span> <span class=\"token keyword\">end</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> density50<span class=\"token punctuation\">,</span>\n<span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">case</span> <span class=\"token keyword\">when</span> s<span class=\"token punctuation\">.</span>density <span class=\"token operator\">></span> <span class=\"token number\">50</span> <span class=\"token operator\">and</span> s<span class=\"token punctuation\">.</span>density <span class=\"token operator\">&lt;=</span><span class=\"token number\">70</span> <span class=\"token keyword\">then</span> <span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span> <span class=\"token keyword\">end</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> density70<span class=\"token punctuation\">,</span>\n<span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">case</span> <span class=\"token keyword\">when</span> s<span class=\"token punctuation\">.</span>density <span class=\"token operator\">></span> <span class=\"token number\">70</span> <span class=\"token operator\">and</span> s<span class=\"token punctuation\">.</span>density <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span> <span class=\"token keyword\">then</span> <span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span> <span class=\"token keyword\">end</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> density99<span class=\"token punctuation\">,</span>\n<span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">case</span> <span class=\"token keyword\">when</span> s<span class=\"token punctuation\">.</span>density <span class=\"token operator\">&lt;=</span><span class=\"token number\">100</span> <span class=\"token keyword\">then</span> <span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span> <span class=\"token keyword\">end</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> density100\n<span class=\"token keyword\">from</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> gs_job_density <span class=\"token keyword\">where</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token operator\">and</span> start_time <span class=\"token operator\">>=</span><span class=\"token comment\">#&#123;start_time&#125; and end_time &lt;=#&#123;end_time&#125;) s</span>\n<span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> s<span class=\"token punctuation\">.</span>real_tag<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">.</span>tag_name<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">.</span>unit_id <span class=\"token keyword\">having</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token operator\">and</span> charindex<span class=\"token punctuation\">(</span><span class=\"token comment\">#&#123;real_tag&#125;,real_tag)>0</span>\n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> s<span class=\"token punctuation\">.</span>unit_id <span class=\"token keyword\">desc</span>\n<span class=\"token keyword\">OFFSET</span> $&#123;<span class=\"token keyword\">start</span>&#125; <span class=\"token keyword\">ROW</span> <span class=\"token keyword\">FETCH</span> <span class=\"token keyword\">NEXT</span> $&#123;<span class=\"token keyword\">limit</span>&#125; <span class=\"token keyword\">rows</span> only<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"批量添加-x2F-更新\"><a href=\"#批量添加-x2F-更新\" class=\"headerlink\" title=\"批量添加&#x2F;更新\"></a>批量添加&#x2F;更新</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> tbl<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">update</span> gs_job_pfr_mx <span class=\"token keyword\">SET</span> val <span class=\"token operator\">=</span> \n<span class=\"token keyword\">CASE</span> tag_code\n<span class=\"token keyword\">WHEN</span> <span class=\"token string\">'cals.GD_SH05_UUB00W0101Y'</span> <span class=\"token keyword\">THEN</span> <span class=\"token string\">'1.0'</span>\n<span class=\"token keyword\">WHEN</span> <span class=\"token string\">'cals.GD_SH05_UUB00W0102Y'</span> <span class=\"token keyword\">THEN</span> <span class=\"token string\">'1.1'</span>\n<span class=\"token keyword\">WHEN</span> <span class=\"token string\">'cals.GD_SH05_UUB00W0101D'</span> <span class=\"token keyword\">THEN</span> <span class=\"token string\">'1.2'</span>\n<span class=\"token keyword\">WHEN</span> <span class=\"token string\">'cals.GD_SH05_UUB00W0102D'</span> <span class=\"token keyword\">THEN</span> <span class=\"token string\">'1.3'</span>\n<span class=\"token keyword\">END</span><span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">TIME</span> <span class=\"token operator\">=</span> GETDATE<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">WHERE</span> tag_code <span class=\"token operator\">IN</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cals.GD_SH05_UUB00W0101Y'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cals.GD_SH05_UUB00W0102Y'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cals.GD_SH05_UUB00W0101D'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cals.GD_SH05_UUB00W0102D'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"分组排序\"><a href=\"#分组排序\" class=\"headerlink\" title=\"分组排序\"></a>分组排序</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> row_number<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">partition</span> <span class=\"token keyword\">BY</span> 分组字段 <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> 排序字段<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> rowNums<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> 表名\n\n<span class=\"token comment\">-- 例：需要筛选两条数据，一条是每个区间段所有数据中最大的，另外一条是个数*10%的数值</span>\n<span class=\"token keyword\">select</span>\nc<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">.</span>maxfhl<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">.</span>qjd<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">.</span>rownum<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">.</span>tag_name<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">.</span>fhl\n<span class=\"token keyword\">from</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span>qjd<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> count<span class=\"token punctuation\">,</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>fhl<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> maxfhl<span class=\"token punctuation\">,</span>qjd<span class=\"token punctuation\">,</span><span class=\"token keyword\">type</span> <span class=\"token keyword\">from</span> gs_job_grade2 <span class=\"token keyword\">where</span> tag_name <span class=\"token operator\">=</span> <span class=\"token comment\">#&#123;tag_name&#125; GROUP BY qjd,type)c</span>\n<span class=\"token keyword\">join</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> row_number<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">partition</span> <span class=\"token keyword\">BY</span> qjd<span class=\"token punctuation\">,</span><span class=\"token keyword\">type</span> <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> fhl <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> rownum<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> gs_job_grade2\n<span class=\"token keyword\">where</span> tag_name <span class=\"token operator\">=</span> <span class=\"token comment\">#&#123;tag_name&#125;) b</span>\n<span class=\"token keyword\">on</span> c<span class=\"token punctuation\">.</span>qjd <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span>qjd <span class=\"token operator\">and</span> c<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span>\n<span class=\"token keyword\">where</span> b<span class=\"token punctuation\">.</span>rownum <span class=\"token operator\">=</span> CEILING<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>count<span class=\"token operator\">*</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">and</span> c<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> <span class=\"token comment\">#&#123;type&#125; and c.qjd = #&#123;qjd&#125;</span>\n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> c<span class=\"token punctuation\">.</span>qjd<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span>\n\n<span class=\"token comment\">-- 排序时添加序号列</span>\n<span class=\"token keyword\">select</span> ROW_NUMBER<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">OVER</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> 用来排序的列的列名<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>XXX<span class=\"token punctuation\">,</span>XXX <span class=\"token keyword\">from</span> XXX<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h2 id=\"差集、交集\"><a href=\"#差集、交集\" class=\"headerlink\" title=\"差集、交集\"></a>差集、交集</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 取差集</span>\n<span class=\"token keyword\">select</span> Name <span class=\"token keyword\">from</span> Person1\n<span class=\"token keyword\">except</span>\n<span class=\"token keyword\">select</span> Name <span class=\"token keyword\">from</span> Person2\n\n<span class=\"token comment\">-- 取交集</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Person1\n<span class=\"token keyword\">InterSect</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Person2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">floor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">-- 返回小于或等于所给数字表达式的最大整数</span>\nfloor<span class=\"token punctuation\">(</span><span class=\"token number\">1.1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> floor<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">2</span>\n\nceiling<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">-- 返回大于或等于所给数字表达式的最小整数。</span>\nceiling<span class=\"token punctuation\">(</span><span class=\"token number\">1.1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">2</span> ceiling<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">2</span>\n\n<span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">-- 四舍五入</span>\n\nsubstring<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">select</span> substring<span class=\"token punctuation\">(</span><span class=\"token string\">'abdcsef'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> abd\n\nreverse<span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">)</span> <span class=\"token comment\">-- 将字符串从尾部到头部排序</span>\n\ncharindex<span class=\"token punctuation\">(</span>expression1<span class=\"token punctuation\">,</span>expression2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span>start_location<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>获取某字符第一次出现的位置\nexpression1 必需 <span class=\"token comment\">---要查找的子字符串</span>\nexpression2 必需 <span class=\"token comment\">---父字符串</span>\nstart_location 可选 <span class=\"token comment\">---指定从父字符串开始查找的位置，默认位置从1开始</span>\ncharindex<span class=\"token punctuation\">(</span><span class=\"token comment\">#&#123;tag_name&#125;,table.tagname)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"SQL关联更新\"><a href=\"#SQL关联更新\" class=\"headerlink\" title=\"SQL关联更新\"></a>SQL关联更新</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- SQL关联使用聚合函数更新sql存在更新不存在添加</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> dbo<span class=\"token punctuation\">.</span>users s <span class=\"token keyword\">where</span> s<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">update</span> users <span class=\"token keyword\">set</span> sex<span class=\"token operator\">=</span><span class=\"token string\">'男'</span> <span class=\"token keyword\">where</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'张三'</span>\n<span class=\"token keyword\">ELSE</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> users <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span>sex<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'女'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"转换数据类型的两种方式\"><a href=\"#转换数据类型的两种方式\" class=\"headerlink\" title=\"转换数据类型的两种方式\"></a>转换数据类型的两种方式</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> TableName <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> cast<span class=\"token punctuation\">(</span>colName <span class=\"token keyword\">as</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> TableName <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> <span class=\"token keyword\">convert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>colName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"树形查询\"><a href=\"#树形查询\" class=\"headerlink\" title=\"树形查询\"></a>树形查询</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">with</span> cte_child<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>areaName<span class=\"token punctuation\">,</span>pid<span class=\"token punctuation\">,</span><span class=\"token keyword\">level</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">as</span>\n<span class=\"token punctuation\">(</span>\n <span class=\"token comment\">--起始条件</span>\n<span class=\"token keyword\">select</span> id<span class=\"token punctuation\">,</span>areaName<span class=\"token punctuation\">,</span>pid<span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">level</span> <span class=\"token keyword\">from</span> erp_area <span class=\"token keyword\">where</span> id <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token comment\">-- 优先列出第一节点查询条件或子节点查询条件</span>\n\n<span class=\"token keyword\">union</span> <span class=\"token keyword\">all</span>\n<span class=\"token comment\">--递归条件</span>\n<span class=\"token keyword\">select</span> a<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>areaName<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>pid<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">.</span><span class=\"token keyword\">level</span><span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token keyword\">from</span> erp_area a\n<span class=\"token keyword\">inner</span> <span class=\"token keyword\">join</span> cte_child b\n<span class=\"token keyword\">on</span> a<span class=\"token punctuation\">.</span>pid<span class=\"token operator\">=</span>b<span class=\"token punctuation\">.</span>id\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> cte_child <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"将文件中的数据插入数据库\"><a href=\"#将文件中的数据插入数据库\" class=\"headerlink\" title=\"将文件中的数据插入数据库\"></a>将文件中的数据插入数据库</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">BULK</span> <span class=\"token keyword\">INSERT</span>  <span class=\"token punctuation\">[</span> schema_name <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">.</span> <span class=\"token punctuation\">[</span> table_name <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">'data_file'</span>\n<span class=\"token punctuation\">[</span> <span class=\"token keyword\">WITH</span> <span class=\"token punctuation\">(</span>Arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">-- 例</span>\n<span class=\"token keyword\">bulk</span> <span class=\"token keyword\">insert</span> dbo<span class=\"token punctuation\">.</span>tablename\n<span class=\"token keyword\">from</span> <span class=\"token string\">'D:\\abc.txt'</span>\n<span class=\"token keyword\">WITH</span><span class=\"token punctuation\">(</span>\n    FIELDTERMINATOR <span class=\"token operator\">=</span> <span class=\"token string\">','</span><span class=\"token punctuation\">,</span>\n    ROWTERMINATOR <span class=\"token operator\">=</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">,</span>\n    DATAFILETYPE <span class=\"token operator\">=</span><span class=\"token string\">'widechar'</span><span class=\"token punctuation\">,</span>\n    KEEPNULLS\n<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>Arguments</strong></p>\n<ul>\n<li>data_file：指定数据文件的full path，bulk insert命令将数据从该文件导入到Target Table中</li>\n<li>ROWTERMINATOR &#x3D; ‘row_terminator’： 指定分隔行的字符，使用该字符来分割行（Row）</li>\n<li>FIELDTERMINATOR &#x3D; ‘field_terminator’：指定分隔字段的字符，使用该字符来分割字段（Field或Column）</li>\n<li>DATAFILETYPE &#x3D; { ‘char’ | ‘native’| ‘widechar’ | ‘widenative’ }：指定data file编码（Encoding）的类型，推荐使用widechar编码</li>\n<li>CODEPAGE &#x3D; { ‘ACP’ | ‘OEM’ | ‘RAW’ | ‘code_page’ }：如果data file中含有单字节（char或varchar）字符数据，使用CodePage参数指定字符列的CodePage</li>\n<li>BATCHSIZE &#x3D; batch_size：指定一个batch包含的数据行数量，在将数据复制到Table中时，每一个Batch作为一个单独的事务，如果一个batch复制失败，那么事务回滚。默认情况下，data file中的所有数据作为一个batch</li>\n<li>CHECK_CONSTRAINTS：指定在执行bulk insert操作期间，必须检查插入的数据是否满足Target Table上的所有约束。如果没有指定CHECK_CONSTRAINTS选项，则所有CHECK和FOREIGN KEY约束都将被忽略，并且，在此操作之后，表上的所有约束将标记为不可信（not-trusted）</li>\n<li>FIRE_TRIGGERS：指定是否启动Insert触发器，如果指定该选项，每个batch成功插入后，会执行Insert触发器；如果不指定该选项，不会执行Insert触发器</li>\n<li>KEEPIDENTITY：指定将data file中的标识值插入到标识列（Identity Column）中，如果不指定KeepIdentity选项，Target Table中的ID列会自动分配唯一的标识值</li>\n<li>KEEPNULLS：指定在执行bulk insert操作期间，空列（Empty Columns）应保留NULL值，而不是插入列的默认值</li>\n<li>TABLOCK：指定在执行bulk insert操作期间，获取一个表级锁，持有表级锁，能够减少锁竞争(Lock Contention)，提高导入性能</li>\n</ul>\n","more":"<h2 id=\"sql-server行转列\"><a href=\"#sql-server行转列\" class=\"headerlink\" title=\"sql server行转列\"></a>sql server行转列</h2><p>类似MySQL group_concat()使用stuff()</p>\n<p>stuff()将字符串插入到另一个字符串中。它从第一个字符串的开始位置删除指定长度的字符；然后将第二个字符串插入到第一个字符串的开始位置。</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> stuff<span class=\"token punctuation\">(</span><span class=\"token string\">'ABCDEFG'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span>hijk<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> AhijkEFG\n<span class=\"token keyword\">SELECT</span> id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">value</span> <span class=\"token operator\">=</span> stuff<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token string\">','</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">value</span> <span class=\"token keyword\">FROM</span> <span class=\"token keyword\">temp</span> t <span class=\"token keyword\">WHERE</span> t<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> <span class=\"token keyword\">temp</span><span class=\"token punctuation\">.</span>id <span class=\"token keyword\">FOR</span> xml path<span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> <span class=\"token keyword\">temp</span> <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> id\n\n<span class=\"token comment\">-- 实例</span>\n<span class=\"token keyword\">SELECT</span> t<span class=\"token punctuation\">.</span>unit_id<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">.</span>value_param<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">.</span>code_param<span class=\"token punctuation\">,</span>conf<span class=\"token punctuation\">.</span>state\n<span class=\"token keyword\">FROM</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> \nunit_id<span class=\"token punctuation\">,</span>\nSTUFF<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token string\">','</span> <span class=\"token operator\">+</span> val1 <span class=\"token keyword\">FROM</span> gs_pss_config b <span class=\"token keyword\">WHERE</span> b<span class=\"token punctuation\">.</span>unit_id <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>unit_id <span class=\"token operator\">AND</span> b<span class=\"token punctuation\">.</span>conf_type <span class=\"token operator\">=</span> <span class=\"token comment\">#&#123;conf_type&#125; FOR xml path('')),1,1,'')AS value_param,</span>\nSTUFF<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token string\">','</span> <span class=\"token operator\">+</span> param_code <span class=\"token keyword\">FROM</span>\tgs_pss_config c\t<span class=\"token keyword\">WHERE</span> c<span class=\"token punctuation\">.</span>unit_id <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>unit_id\t<span class=\"token operator\">AND</span> c<span class=\"token punctuation\">.</span>conf_type <span class=\"token operator\">=</span> <span class=\"token comment\">#&#123;conf_type&#125; FOR xml path('')),1,1,'')AS code_param</span>\n<span class=\"token keyword\">FROM</span>\ngs_pss_config a\n<span class=\"token keyword\">WHERE</span> a<span class=\"token punctuation\">.</span>conf_type <span class=\"token operator\">=</span> <span class=\"token comment\">#&#123;conf_type&#125; GROUP BY a.unit_id)t</span>\n<span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">JOIN</span> \ngs_yctp_unit_config conf <span class=\"token keyword\">on</span> t<span class=\"token punctuation\">.</span>unit_id <span class=\"token operator\">=</span> conf<span class=\"token punctuation\">.</span>unit_id <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h2 id=\"统计数据考核密度\"><a href=\"#统计数据考核密度\" class=\"headerlink\" title=\"统计数据考核密度\"></a>统计数据考核密度</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> s<span class=\"token punctuation\">.</span>real_tag<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">.</span>tag_name<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">.</span>unit_id<span class=\"token punctuation\">,</span>\n<span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">case</span> <span class=\"token keyword\">when</span> s<span class=\"token punctuation\">.</span>density <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token keyword\">then</span> <span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span> <span class=\"token keyword\">end</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> density0<span class=\"token punctuation\">,</span>\n<span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">case</span> <span class=\"token keyword\">when</span> s<span class=\"token punctuation\">.</span>density <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">and</span> s<span class=\"token punctuation\">.</span>density <span class=\"token operator\">&lt;=</span><span class=\"token number\">20</span> <span class=\"token keyword\">then</span> <span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span> <span class=\"token keyword\">end</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> density20<span class=\"token punctuation\">,</span>\n<span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">case</span> <span class=\"token keyword\">when</span> s<span class=\"token punctuation\">.</span>density <span class=\"token operator\">></span> <span class=\"token number\">20</span> <span class=\"token operator\">and</span> s<span class=\"token punctuation\">.</span>density <span class=\"token operator\">&lt;=</span><span class=\"token number\">50</span> <span class=\"token keyword\">then</span> <span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span> <span class=\"token keyword\">end</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> density50<span class=\"token punctuation\">,</span>\n<span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">case</span> <span class=\"token keyword\">when</span> s<span class=\"token punctuation\">.</span>density <span class=\"token operator\">></span> <span class=\"token number\">50</span> <span class=\"token operator\">and</span> s<span class=\"token punctuation\">.</span>density <span class=\"token operator\">&lt;=</span><span class=\"token number\">70</span> <span class=\"token keyword\">then</span> <span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span> <span class=\"token keyword\">end</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> density70<span class=\"token punctuation\">,</span>\n<span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">case</span> <span class=\"token keyword\">when</span> s<span class=\"token punctuation\">.</span>density <span class=\"token operator\">></span> <span class=\"token number\">70</span> <span class=\"token operator\">and</span> s<span class=\"token punctuation\">.</span>density <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span> <span class=\"token keyword\">then</span> <span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span> <span class=\"token keyword\">end</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> density99<span class=\"token punctuation\">,</span>\n<span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">case</span> <span class=\"token keyword\">when</span> s<span class=\"token punctuation\">.</span>density <span class=\"token operator\">&lt;=</span><span class=\"token number\">100</span> <span class=\"token keyword\">then</span> <span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span> <span class=\"token keyword\">end</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> density100\n<span class=\"token keyword\">from</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> gs_job_density <span class=\"token keyword\">where</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token operator\">and</span> start_time <span class=\"token operator\">>=</span><span class=\"token comment\">#&#123;start_time&#125; and end_time &lt;=#&#123;end_time&#125;) s</span>\n<span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> s<span class=\"token punctuation\">.</span>real_tag<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">.</span>tag_name<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">.</span>unit_id <span class=\"token keyword\">having</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token operator\">and</span> charindex<span class=\"token punctuation\">(</span><span class=\"token comment\">#&#123;real_tag&#125;,real_tag)>0</span>\n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> s<span class=\"token punctuation\">.</span>unit_id <span class=\"token keyword\">desc</span>\n<span class=\"token keyword\">OFFSET</span> $&#123;<span class=\"token keyword\">start</span>&#125; <span class=\"token keyword\">ROW</span> <span class=\"token keyword\">FETCH</span> <span class=\"token keyword\">NEXT</span> $&#123;<span class=\"token keyword\">limit</span>&#125; <span class=\"token keyword\">rows</span> only<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"批量添加-x2F-更新\"><a href=\"#批量添加-x2F-更新\" class=\"headerlink\" title=\"批量添加&#x2F;更新\"></a>批量添加&#x2F;更新</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> tbl<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">update</span> gs_job_pfr_mx <span class=\"token keyword\">SET</span> val <span class=\"token operator\">=</span> \n<span class=\"token keyword\">CASE</span> tag_code\n<span class=\"token keyword\">WHEN</span> <span class=\"token string\">'cals.GD_SH05_UUB00W0101Y'</span> <span class=\"token keyword\">THEN</span> <span class=\"token string\">'1.0'</span>\n<span class=\"token keyword\">WHEN</span> <span class=\"token string\">'cals.GD_SH05_UUB00W0102Y'</span> <span class=\"token keyword\">THEN</span> <span class=\"token string\">'1.1'</span>\n<span class=\"token keyword\">WHEN</span> <span class=\"token string\">'cals.GD_SH05_UUB00W0101D'</span> <span class=\"token keyword\">THEN</span> <span class=\"token string\">'1.2'</span>\n<span class=\"token keyword\">WHEN</span> <span class=\"token string\">'cals.GD_SH05_UUB00W0102D'</span> <span class=\"token keyword\">THEN</span> <span class=\"token string\">'1.3'</span>\n<span class=\"token keyword\">END</span><span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">TIME</span> <span class=\"token operator\">=</span> GETDATE<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">WHERE</span> tag_code <span class=\"token operator\">IN</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cals.GD_SH05_UUB00W0101Y'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cals.GD_SH05_UUB00W0102Y'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cals.GD_SH05_UUB00W0101D'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cals.GD_SH05_UUB00W0102D'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"分组排序\"><a href=\"#分组排序\" class=\"headerlink\" title=\"分组排序\"></a>分组排序</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> row_number<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">partition</span> <span class=\"token keyword\">BY</span> 分组字段 <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> 排序字段<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> rowNums<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> 表名\n\n<span class=\"token comment\">-- 例：需要筛选两条数据，一条是每个区间段所有数据中最大的，另外一条是个数*10%的数值</span>\n<span class=\"token keyword\">select</span>\nc<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">.</span>maxfhl<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">.</span>qjd<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">.</span>rownum<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">.</span>tag_name<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">.</span>fhl\n<span class=\"token keyword\">from</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span>qjd<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> count<span class=\"token punctuation\">,</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>fhl<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> maxfhl<span class=\"token punctuation\">,</span>qjd<span class=\"token punctuation\">,</span><span class=\"token keyword\">type</span> <span class=\"token keyword\">from</span> gs_job_grade2 <span class=\"token keyword\">where</span> tag_name <span class=\"token operator\">=</span> <span class=\"token comment\">#&#123;tag_name&#125; GROUP BY qjd,type)c</span>\n<span class=\"token keyword\">join</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> row_number<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">over</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">partition</span> <span class=\"token keyword\">BY</span> qjd<span class=\"token punctuation\">,</span><span class=\"token keyword\">type</span> <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> fhl <span class=\"token keyword\">desc</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> rownum<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> gs_job_grade2\n<span class=\"token keyword\">where</span> tag_name <span class=\"token operator\">=</span> <span class=\"token comment\">#&#123;tag_name&#125;) b</span>\n<span class=\"token keyword\">on</span> c<span class=\"token punctuation\">.</span>qjd <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span>qjd <span class=\"token operator\">and</span> c<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span>\n<span class=\"token keyword\">where</span> b<span class=\"token punctuation\">.</span>rownum <span class=\"token operator\">=</span> CEILING<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>count<span class=\"token operator\">*</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">and</span> c<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> <span class=\"token comment\">#&#123;type&#125; and c.qjd = #&#123;qjd&#125;</span>\n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> c<span class=\"token punctuation\">.</span>qjd<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span>\n\n<span class=\"token comment\">-- 排序时添加序号列</span>\n<span class=\"token keyword\">select</span> ROW_NUMBER<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">OVER</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> 用来排序的列的列名<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>XXX<span class=\"token punctuation\">,</span>XXX <span class=\"token keyword\">from</span> XXX<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h2 id=\"差集、交集\"><a href=\"#差集、交集\" class=\"headerlink\" title=\"差集、交集\"></a>差集、交集</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 取差集</span>\n<span class=\"token keyword\">select</span> Name <span class=\"token keyword\">from</span> Person1\n<span class=\"token keyword\">except</span>\n<span class=\"token keyword\">select</span> Name <span class=\"token keyword\">from</span> Person2\n\n<span class=\"token comment\">-- 取交集</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Person1\n<span class=\"token keyword\">InterSect</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> Person2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">floor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">-- 返回小于或等于所给数字表达式的最大整数</span>\nfloor<span class=\"token punctuation\">(</span><span class=\"token number\">1.1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> floor<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">2</span>\n\nceiling<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">-- 返回大于或等于所给数字表达式的最小整数。</span>\nceiling<span class=\"token punctuation\">(</span><span class=\"token number\">1.1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">2</span> ceiling<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">2</span>\n\n<span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">-- 四舍五入</span>\n\nsubstring<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">select</span> substring<span class=\"token punctuation\">(</span><span class=\"token string\">'abdcsef'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> abd\n\nreverse<span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">)</span> <span class=\"token comment\">-- 将字符串从尾部到头部排序</span>\n\ncharindex<span class=\"token punctuation\">(</span>expression1<span class=\"token punctuation\">,</span>expression2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span>start_location<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>获取某字符第一次出现的位置\nexpression1 必需 <span class=\"token comment\">---要查找的子字符串</span>\nexpression2 必需 <span class=\"token comment\">---父字符串</span>\nstart_location 可选 <span class=\"token comment\">---指定从父字符串开始查找的位置，默认位置从1开始</span>\ncharindex<span class=\"token punctuation\">(</span><span class=\"token comment\">#&#123;tag_name&#125;,table.tagname)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"SQL关联更新\"><a href=\"#SQL关联更新\" class=\"headerlink\" title=\"SQL关联更新\"></a>SQL关联更新</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- SQL关联使用聚合函数更新sql存在更新不存在添加</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> dbo<span class=\"token punctuation\">.</span>users s <span class=\"token keyword\">where</span> s<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">update</span> users <span class=\"token keyword\">set</span> sex<span class=\"token operator\">=</span><span class=\"token string\">'男'</span> <span class=\"token keyword\">where</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'张三'</span>\n<span class=\"token keyword\">ELSE</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> users <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span>sex<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'张三'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'女'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"转换数据类型的两种方式\"><a href=\"#转换数据类型的两种方式\" class=\"headerlink\" title=\"转换数据类型的两种方式\"></a>转换数据类型的两种方式</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> TableName <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> cast<span class=\"token punctuation\">(</span>colName <span class=\"token keyword\">as</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> TableName <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> <span class=\"token keyword\">convert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>colName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"树形查询\"><a href=\"#树形查询\" class=\"headerlink\" title=\"树形查询\"></a>树形查询</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">with</span> cte_child<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>areaName<span class=\"token punctuation\">,</span>pid<span class=\"token punctuation\">,</span><span class=\"token keyword\">level</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">as</span>\n<span class=\"token punctuation\">(</span>\n <span class=\"token comment\">--起始条件</span>\n<span class=\"token keyword\">select</span> id<span class=\"token punctuation\">,</span>areaName<span class=\"token punctuation\">,</span>pid<span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">level</span> <span class=\"token keyword\">from</span> erp_area <span class=\"token keyword\">where</span> id <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token comment\">-- 优先列出第一节点查询条件或子节点查询条件</span>\n\n<span class=\"token keyword\">union</span> <span class=\"token keyword\">all</span>\n<span class=\"token comment\">--递归条件</span>\n<span class=\"token keyword\">select</span> a<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>areaName<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">.</span>pid<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">.</span><span class=\"token keyword\">level</span><span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token keyword\">from</span> erp_area a\n<span class=\"token keyword\">inner</span> <span class=\"token keyword\">join</span> cte_child b\n<span class=\"token keyword\">on</span> a<span class=\"token punctuation\">.</span>pid<span class=\"token operator\">=</span>b<span class=\"token punctuation\">.</span>id\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> cte_child <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"将文件中的数据插入数据库\"><a href=\"#将文件中的数据插入数据库\" class=\"headerlink\" title=\"将文件中的数据插入数据库\"></a>将文件中的数据插入数据库</h2><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">BULK</span> <span class=\"token keyword\">INSERT</span>  <span class=\"token punctuation\">[</span> schema_name <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">.</span> <span class=\"token punctuation\">[</span> table_name <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">FROM</span> <span class=\"token string\">'data_file'</span>\n<span class=\"token punctuation\">[</span> <span class=\"token keyword\">WITH</span> <span class=\"token punctuation\">(</span>Arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\">-- 例</span>\n<span class=\"token keyword\">bulk</span> <span class=\"token keyword\">insert</span> dbo<span class=\"token punctuation\">.</span>tablename\n<span class=\"token keyword\">from</span> <span class=\"token string\">'D:\\abc.txt'</span>\n<span class=\"token keyword\">WITH</span><span class=\"token punctuation\">(</span>\n    FIELDTERMINATOR <span class=\"token operator\">=</span> <span class=\"token string\">','</span><span class=\"token punctuation\">,</span>\n    ROWTERMINATOR <span class=\"token operator\">=</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">,</span>\n    DATAFILETYPE <span class=\"token operator\">=</span><span class=\"token string\">'widechar'</span><span class=\"token punctuation\">,</span>\n    KEEPNULLS\n<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>Arguments</strong></p>\n<ul>\n<li>data_file：指定数据文件的full path，bulk insert命令将数据从该文件导入到Target Table中</li>\n<li>ROWTERMINATOR &#x3D; ‘row_terminator’： 指定分隔行的字符，使用该字符来分割行（Row）</li>\n<li>FIELDTERMINATOR &#x3D; ‘field_terminator’：指定分隔字段的字符，使用该字符来分割字段（Field或Column）</li>\n<li>DATAFILETYPE &#x3D; { ‘char’ | ‘native’| ‘widechar’ | ‘widenative’ }：指定data file编码（Encoding）的类型，推荐使用widechar编码</li>\n<li>CODEPAGE &#x3D; { ‘ACP’ | ‘OEM’ | ‘RAW’ | ‘code_page’ }：如果data file中含有单字节（char或varchar）字符数据，使用CodePage参数指定字符列的CodePage</li>\n<li>BATCHSIZE &#x3D; batch_size：指定一个batch包含的数据行数量，在将数据复制到Table中时，每一个Batch作为一个单独的事务，如果一个batch复制失败，那么事务回滚。默认情况下，data file中的所有数据作为一个batch</li>\n<li>CHECK_CONSTRAINTS：指定在执行bulk insert操作期间，必须检查插入的数据是否满足Target Table上的所有约束。如果没有指定CHECK_CONSTRAINTS选项，则所有CHECK和FOREIGN KEY约束都将被忽略，并且，在此操作之后，表上的所有约束将标记为不可信（not-trusted）</li>\n<li>FIRE_TRIGGERS：指定是否启动Insert触发器，如果指定该选项，每个batch成功插入后，会执行Insert触发器；如果不指定该选项，不会执行Insert触发器</li>\n<li>KEEPIDENTITY：指定将data file中的标识值插入到标识列（Identity Column）中，如果不指定KeepIdentity选项，Target Table中的ID列会自动分配唯一的标识值</li>\n<li>KEEPNULLS：指定在执行bulk insert操作期间，空列（Empty Columns）应保留NULL值，而不是插入列的默认值</li>\n<li>TABLOCK：指定在执行bulk insert操作期间，获取一个表级锁，持有表级锁，能够减少锁竞争(Lock Contention)，提高导入性能</li>\n</ul>\n","categories":[{"name":"数据库","path":"api/categories/数据库.json"}],"tags":[]}