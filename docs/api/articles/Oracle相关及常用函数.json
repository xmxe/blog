{"title":"Oracle相关及常用函数","slug":"Oracle相关及常用函数","date":"2022-09-27T02:32:36.536Z","updated":"2023-03-22T07:12:26.168Z","comments":true,"path":"api/articles/Oracle相关及常用函数.json","excerpt":null,"covers":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2F29520719.s21i.faiusr.com%2F2%2FABUIABACGAAgpufK7QUoj7DrqQIw6Ac4_QQ%21800x800.jpg&refer=http%3A%2F%2F29520719.s21i.faiusr.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1669537603&t=31ddd7a1992896268a14e72c35ed60ed","content":"<h3 id=\"Sys和System用户区别\"><a href=\"#Sys和System用户区别\" class=\"headerlink\" title=\"Sys和System用户区别\"></a>Sys和System用户区别</h3><ul>\n<li>Sys:拥有DBA、SysDBA、Sysoper（系统操作员）角色或权限，是Oracle权限最高的用户，只能以SysDBA或Sysoper登录，不能以Normal形式登录。</li>\n<li>System:拥有DBA、Sysdba权限或角色，可以以普通用户的身份登录。</li>\n</ul>\n<h3 id=\"Sysdba、Sysoper、DBA区别\"><a href=\"#Sysdba、Sysoper、DBA区别\" class=\"headerlink\" title=\"Sysdba、Sysoper、DBA区别\"></a>Sysdba、Sysoper、DBA区别</h3><ul>\n<li>Sysdba用户:可以改变字符集、创建删除数据库、登录之后用户是SYS（shutdown、startup）</li>\n<li>Sysoper:用户不可改变字符集、不能创、删数据库、登陆之后用户是PUBLIC（shutdown、startup）</li>\n<li>DBA用户：只有在启动数据库后才能执行各种管理工作。</li>\n<li>Sysdba&gt; Sysoper&gt;普通的DBA</li>\n</ul>\n<h3 id=\"Oracle中的角色\"><a href=\"#Oracle中的角色\" class=\"headerlink\" title=\"Oracle中的角色\"></a>Oracle中的角色</h3><ol>\n<li>CONNECT</li>\n<li>RESOURCE</li>\n<li>DBA</li>\n<li>EXP_FULL_DATABASE</li>\n<li>IMP_FULL_DATABASE</li>\n<li>DELETE_CATALOG_ROLE</li>\n<li>EXECUTE_CATALOG_ROLE</li>\n<li>SELECT_CATALOG_ROLE</li>\n</ol>\n<p><strong>CONNECT角色</strong>：–是授予最终用户的典型权利，最基本的</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token number\">1.</span> <span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">SESSION</span> <span class=\"token comment\">--修改会话</span>\n<span class=\"token number\">2.</span> <span class=\"token keyword\">CREATE</span> CLUSTER <span class=\"token comment\">--建立聚簇</span>\n<span class=\"token number\">3.</span> <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">DATABASE</span> LINK <span class=\"token comment\">--建立数据库链接</span>\n<span class=\"token number\">4.</span> <span class=\"token keyword\">CREATE</span> SEQUENCE <span class=\"token comment\">--建立序列</span>\n<span class=\"token number\">5.</span> <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">SESSION</span> <span class=\"token comment\">--建立会话</span>\n<span class=\"token number\">6.</span> <span class=\"token keyword\">CREATE</span> SYNONYM <span class=\"token comment\">--建立同义词</span>\n<span class=\"token number\">7.</span> <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> <span class=\"token comment\">--建立视图www_bitscn_com中国.网管联盟</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>RESOURCE角色</strong>： –是授予开发人员的</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token number\">1.</span> <span class=\"token keyword\">CREATE</span> CLUSTER <span class=\"token comment\">--建立聚簇</span>\n<span class=\"token number\">2.</span> <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">PROCEDURE</span> <span class=\"token comment\">--建立过程</span>\n<span class=\"token number\">3.</span> <span class=\"token keyword\">CREATE</span> SEQUENCE <span class=\"token comment\">--建立序列</span>\n<span class=\"token number\">4.</span> <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token comment\">--建表</span>\n<span class=\"token number\">5.</span> <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TRIGGER</span> <span class=\"token comment\">--建立触发器</span>\n<span class=\"token number\">6.</span> <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TYPE</span> <span class=\"token comment\">--建立类型</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>DBA角色</strong>：拥有系统所有系统级权限（系统管理员）</p>\n<p><strong>IMP_FULL_DATABASE角色、EXP_FULL_DATABASE角色</strong>：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token number\">1.</span> <span class=\"token keyword\">BACKUP</span> <span class=\"token keyword\">ANY</span> <span class=\"token keyword\">TABLE</span> <span class=\"token comment\">--备份任何表</span>\n<span class=\"token number\">2.</span> <span class=\"token keyword\">EXECUTE</span> <span class=\"token keyword\">ANY</span> <span class=\"token keyword\">PROCEDURE</span> <span class=\"token comment\">--执行任何操作</span>\n<span class=\"token number\">3.</span> <span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">ANY</span> <span class=\"token keyword\">TABLE</span> <span class=\"token comment\">--查询任何表</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>SELECT_CATALOG_ROLE角色</strong>具有从数据字典查询的权利，<br>(尤其是此处数据字典：就是数据库运行时的各种信息参考：Oracle 11g体系结构–数据字典)</p>\n<p><strong>EXECUTE_CATALOG_ROLE</strong>角色具有从数据字典中执行部分过程和函数的权利。</p>\n<h3 id=\"分区表\"><a href=\"#分区表\" class=\"headerlink\" title=\"分区表\"></a>分区表</h3><p>当表中的数据量不断增大，查询数据的速度就会变慢，应用程序的性能就会下降，这时就应该考虑对表进行分区。表进行分区后，逻辑上表仍然是一张完整的表，只是将表中的数据在物理上存放到多个表空间(物理文件上)，这样查询数据时，不至于每次都扫描整张表。</p>\n<h3 id=\"PL-x2F-SQL-x2F-Oracle乱码问题解决方案\"><a href=\"#PL-x2F-SQL-x2F-Oracle乱码问题解决方案\" class=\"headerlink\" title=\"PL&#x2F;SQL &#x2F;Oracle乱码问题解决方案\"></a>PL&#x2F;SQL &#x2F;Oracle乱码问题解决方案</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">Select</span> userenv<span class=\"token punctuation\">(</span>‘<span class=\"token keyword\">language</span>’<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span> <span class=\"token comment\">-- 查看服务器端编码</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> V$NLS_PARAMETERS；<span class=\"token comment\">-- 查看NLS_LANGUAGE的值与第一个的查询结果是否一致，假如不一致需要设置环境变量，变量名：NLS_LANG 变量值：第1个查到的值 重启PL/SQL(假如在乱码之前已经插入数据，那么配置环境变量后依然乱码，需要删除数据重新导入)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"Oracle的操作\"><a href=\"#Oracle的操作\" class=\"headerlink\" title=\"Oracle的操作\"></a>Oracle的操作</h3><ol>\n<li>cmd进入oracle <pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">sqlplus 账户名<span class=\"token operator\">/</span>密码 <span class=\"token keyword\">as</span> 角色名 <span class=\"token comment\">--（sys用户必须带as sysdba）例:sqlplus sys/admin as sysdba</span>\n\n<span class=\"token keyword\">exit</span> <span class=\"token comment\">--退出</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n<li>用户账号相关操作<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 创建用户</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">user</span> xxx identified <span class=\"token keyword\">by</span> xxx<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 授权</span>\n<span class=\"token keyword\">grant</span> <span class=\"token keyword\">create</span> <span class=\"token keyword\">session</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">connect</span><span class=\"token punctuation\">,</span> resource <span class=\"token keyword\">to</span> xxx<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 删除用户 加cascade可以一同删除用户数据</span>\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">user</span> username <span class=\"token keyword\">cascade</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 解锁登陆账号</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">user</span> scott account <span class=\"token keyword\">unlock</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 冻结登陆账号</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">user</span> dbaName account <span class=\"token keyword\">lock</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 修改登录账号密码</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">user</span> dbaName identified <span class=\"token keyword\">by</span> <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 查看所有用户相关信息</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> DBA_USERS<span class=\"token punctuation\">;</span><span class=\"token comment\">-- 查询DBA用户</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> ALL_USERS<span class=\"token punctuation\">;</span><span class=\"token comment\">-- 查询所有用户</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> USER_USERS<span class=\"token punctuation\">;</span><span class=\"token comment\">-- 查询系统用户</span>\n\n<span class=\"token comment\">-- 查看用户系统权限</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> DBA_SYS_PRIVS<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> USER_SYS_PRIVS<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 查看用户对象或角色权限</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> DBA_TAB_PRIVS<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> ALL_TAB_PRIVS<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> USER_TAB_PRIVS<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 查看所有角色</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> DBA_ROLES<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 查看用户或角色所拥有的角色</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> DBA_ROLE_PRIVS<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> USER_ROLE_PRIVS<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> role_sys_privs<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>表空间相关<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">Select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Dba_Tablespaces<span class=\"token punctuation\">;</span> <span class=\"token comment\">-- 查看所有的表空间</span>\n<span class=\"token keyword\">Select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> DBA_DATA_FILES<span class=\"token punctuation\">;</span> <span class=\"token comment\">-- 查看所有的表空间以及对应的地址</span>\n\n<span class=\"token comment\">-- 创建临时表空间</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">temporary</span> <span class=\"token keyword\">tablespace</span> user_temp\ntempfile <span class=\"token string\">'D:\\APP\\ADMINISTRATOR\\ORADATA\\ORCL\\user_temp.dbf'</span>\nsize <span class=\"token number\">50</span>m  <span class=\"token comment\">--初始空间50m</span>\nautoextend <span class=\"token keyword\">on</span> <span class=\"token comment\">-- on为表空间自动扩展</span>\n<span class=\"token keyword\">next</span> <span class=\"token number\">50</span>m maxsize <span class=\"token number\">20480</span>m <span class=\"token comment\">-- 每次50m最大2048m</span>\nextent management <span class=\"token keyword\">local</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">-- 本地管理表空间</span>\n\n<span class=\"token comment\">-- 创建数据表空间</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">tablespace</span> user_data\nlogging\ndatafile <span class=\"token string\">'D:\\APP\\ADMINISTRATOR\\ORADATA\\ORCL\\user_data.dbf'</span>\nsize <span class=\"token number\">50</span>m\nautoextend <span class=\"token keyword\">on</span>\n<span class=\"token keyword\">next</span> <span class=\"token number\">50</span>m maxsize <span class=\"token number\">20480</span>m\nextent management <span class=\"token keyword\">local</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 创建用户指定表空间</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">user</span> 用户名 identified <span class=\"token keyword\">by</span> 密码 <span class=\"token keyword\">default</span> <span class=\"token keyword\">tablespace</span> 表空间名；<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n<h3 id=\"Oracle相关函数\"><a href=\"#Oracle相关函数\" class=\"headerlink\" title=\"Oracle相关函数\"></a>Oracle相关函数</h3><h4 id=\"wm-concat-行转列\"><a href=\"#wm-concat-行转列\" class=\"headerlink\" title=\"wm_concat()行转列\"></a>wm_concat()行转列</h4><p>wm_concat()函数是oracle中独有的,mysql中有一个group_concat()函数。这两个函数的作用是相同的，它们的功能是：实现行转列功能，即将查询出的某一列值使用逗号进行隔开拼接，成为一条数据</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 根据年龄获取学生的分数</span>\n<span class=\"token keyword\">select</span> age<span class=\"token punctuation\">,</span>to_char<span class=\"token punctuation\">(</span>wm_concat<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> name<span class=\"token punctuation\">,</span>to_char<span class=\"token punctuation\">(</span>wm_concat<span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> score <span class=\"token keyword\">from</span> student t <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> age<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- age  name     score</span>\n<span class=\"token comment\">-- 18  张三,李四  81,82</span>\n<span class=\"token comment\">-- 19  王五,赵六  67,90</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"decode\"><a href=\"#decode\" class=\"headerlink\" title=\"decode\"></a>decode</h4><p>decode(c1,c2,c3)&#x2F;decode(c1,c2,c3,c4)&#x2F;decode(c1,c2,c3,c4,c5)&#x2F;decode(c1,[c2,c3],[c4,c5],[c6,c7]….,[C2x,C2x+1] [,C2x+2])<br>从c1之后开始,每两个参数看做是一组数,拿每组数的第一个参数和c1比较,如果相同则返回第二个参数:比如 如果c2&#x3D;&#x3D;c1 return c3如果该组数的第一个参数和c1不相同,则比较下一组:比如 如果c2&lt;&gt;C1继续判断C4&#x3D;&#x3D;C1? 相同return c5<br>例  decode(type,’a’,’11’,’b’,’12’,’c’,’13’,’d’,’14’,’e’,’15’,type)</p>\n<h4 id=\"树形查询\"><a href=\"#树形查询\" class=\"headerlink\" title=\"树形查询\"></a>树形查询</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> area_code <span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> tableA <span class=\"token keyword\">where</span> isvalid<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">start</span> <span class=\"token keyword\">with</span> area_code <span class=\"token operator\">=</span> <span class=\"token number\">5002</span> <span class=\"token keyword\">connect</span> <span class=\"token keyword\">by</span>  prior parent_area_code <span class=\"token operator\">=</span> area_code<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 父子关系查询（start with connect by prior）</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> tabname t <span class=\"token keyword\">where</span> 条件 <span class=\"token keyword\">start</span> <span class=\"token keyword\">with</span> t<span class=\"token punctuation\">.</span>org_parent_code<span class=\"token operator\">=</span><span class=\"token string\">'10000008'</span> <span class=\"token keyword\">connect</span> <span class=\"token keyword\">by</span> t<span class=\"token punctuation\">.</span>org_code <span class=\"token operator\">=</span> prior t<span class=\"token punctuation\">.</span>org_parent_code<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"数值函数\"><a href=\"#数值函数\" class=\"headerlink\" title=\"数值函数\"></a>数值函数</h4><ol>\n<li>mod(x,y) 取模 求余数</li>\n<li>nvl(x,y) 如果x的值为空,则返回y<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span>sal<span class=\"token punctuation\">,</span>comm<span class=\"token punctuation\">,</span>sal<span class=\"token operator\">+</span>nvl<span class=\"token punctuation\">(</span>comm<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 数值列可以直接做加减乘除运算,如果数值列值为null则加减乘除后也是null需要使用nvl函数去空</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ol>\n<h4 id=\"精确指定位数的函数\"><a href=\"#精确指定位数的函数\" class=\"headerlink\" title=\"精确指定位数的函数\"></a>精确指定位数的函数</h4><ol>\n<li>round(c1,c2) 能够四舍五入</li>\n<li>trunc(c1,c2) 直接舍去</li>\n<li>c2&gt;0 : c2表示有多少位小数<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">21.23512</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>   <span class=\"token comment\">--  21.24</span>\n<span class=\"token keyword\">select</span> trunc<span class=\"token punctuation\">(</span><span class=\"token number\">21.23512</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>   <span class=\"token comment\">--  21.23</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li>c2&lt;0 : c2表示小数点向左精确|c2|位<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">2163.512</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>  <span class=\"token comment\">--  2200</span>\n<span class=\"token keyword\">select</span> trunc<span class=\"token punctuation\">(</span><span class=\"token number\">2163.512</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>  <span class=\"token comment\">--  2100</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li>c2如果不存在,表示只保留整数部分<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">2163.512</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>  <span class=\"token comment\">--  2164</span>\n<span class=\"token keyword\">select</span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">2163.512</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>    <span class=\"token comment\">-- 2164</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ol>\n<h4 id=\"字符函数\"><a href=\"#字符函数\" class=\"headerlink\" title=\"字符函数\"></a>字符函数</h4><ul>\n<li><p>length() 求字符串长度</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 查询姓名长度为5个字符的员工姓名</span>\n<span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span>length<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> length<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li><p>lower() 全部转为小写</p>\n</li>\n<li><p>upper() 全部转为大写</p>\n</li>\n<li><p>initcap() 单词首字母大写其他字母小写</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span>lower<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>upper<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>initcap<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> emp<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>截取字符串:substr(c1,c2[,c3]) c1: 原字符串 c2: 从哪个位置开始截取 c3: 截取长度(默认截取到最后)</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 查询员工姓名,截取员工姓名的第一个字符,再截取姓名的最后一个字符</span>\n<span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span>sal<span class=\"token punctuation\">,</span>substr<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>substr<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">,</span>length<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 查询员工姓名,截取员工姓名中最中间的一个字符(偶数个截取后一位)</span>\n<span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span> substr<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">,</span>trunc<span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>索引字符串:instr(c1,c2,c3,c4) c1: 原字符串 c2: 要查找的字符串 c3: 从哪个位置开始查找 默认值1 c4: 第几次出现 默认值1</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 查询员工姓名中带有E字符的员工</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> ename <span class=\"token operator\">like</span> <span class=\"token string\">'%E%'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> instr<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">,</span><span class=\"token string\">'E'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;></span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> instr<span class=\"token punctuation\">(</span><span class=\"token string\">'sanhaoxuesheng'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'aow'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- instr能够用来替代like实现模糊查询</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> instr<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">,</span><span class=\"token string\">'%'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;></span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">--</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>拼接字符串: 符号: || 函数: concat(c1,c2) 将c1 c2拼接为一个字符串</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> concat<span class=\"token punctuation\">(</span>concat<span class=\"token punctuation\">(</span><span class=\"token string\">'123'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'abc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'eee'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">select</span> <span class=\"token string\">'123'</span> <span class=\"token operator\">||</span> <span class=\"token string\">'abc'</span> <span class=\"token operator\">||</span> <span class=\"token string\">'eee'</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ul>\n<h4 id=\"日期函数\"><a href=\"#日期函数\" class=\"headerlink\" title=\"日期函数\"></a>日期函数</h4><p>两个日期之间可以做减法,单位是天 两个日期之间不能做加法</p>\n<ul>\n<li>add_months(c1,c2) c1日期类型,c2整数在c1日期的基础上增减c2个月份<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 查询当前系统时间之前的一个月</span>\n<span class=\"token keyword\">select</span> add_months<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 查询十年后的今天</span>\n<span class=\"token keyword\">select</span> add_months<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token number\">120</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>months_between(c1,c2) c1 c2都是日期类型 计算两个日期之间相差多少个月份<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span>months_between<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span>hiredate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>last_day(c)<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 查询给定日期所在月份的最后一天</span>\n<span class=\"token keyword\">select</span> last_day<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 查询下一个月的第一天 </span>\n<span class=\"token keyword\">select</span> last_day<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 查询上一个月的第一天 </span>\n<span class=\"token keyword\">select</span> last_day<span class=\"token punctuation\">(</span>add_months<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>计算日期:<br>round(c1,c2)  四舍五入 trunc(c1,c2)  直接舍去<br>c1:日期类型的值  c2:字符类型,日期格式 在c1日期的基础上,精确到c2指定的日期格式 如果比c2低的日期格式,默认是初始值</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 将当前系统时间精确到年份</span>\n<span class=\"token keyword\">select</span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token string\">'yyyy'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 如果当前时间是: 2017-2-11 13:00:00 //2017-1-1 00:00:00</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<ol start=\"5\">\n<li>查询本年度的一季度的起始日期<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> trunc<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token string\">'yyyy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>add_months<span class=\"token punctuation\">(</span>trunc<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token string\">'yyyy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>next_day(c1,c2) c1: 日期类型  c2:字符或整数: 周期值 从c1日期来时,查找c2指定的周期的日期<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 查询当前系统时间之后的第一个星期一</span>\n<span class=\"token keyword\">select</span> sysdate<span class=\"token punctuation\">,</span>next_day<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token string\">'星期四'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ol>\n<h4 id=\"转换函数\"><a href=\"#转换函数\" class=\"headerlink\" title=\"转换函数\"></a>转换函数</h4><ol>\n<li><p>to_date(c1,c2)</p>\n</li>\n<li><p>to_timestamp(c1,c2) c1: 字符类型的日期 c2:日期格式<br>能够根据c2指定的格式将c1字符类型的日期转变为日期类型</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> emp<span class=\"token punctuation\">(</span>empno<span class=\"token punctuation\">,</span>hiredate<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">1001</span><span class=\"token punctuation\">,</span> to_date<span class=\"token punctuation\">(</span><span class=\"token string\">'2017-1-1'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'yyyy-dd-mm'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> emp<span class=\"token punctuation\">(</span>empno<span class=\"token punctuation\">,</span>hiredate<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">1002</span><span class=\"token punctuation\">,</span> to_date<span class=\"token punctuation\">(</span><span class=\"token string\">'2017-1-1 12:21:20'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'yyyy-dd-mm hh24:mi:ss'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p>to_char()</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 将一个数值转变为一个字符串</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> <span class=\"token string\">'1'</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> <span class=\"token string\">'1'</span><span class=\"token operator\">=</span>to_char<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 格式化字符串或数值</span>\n<span class=\"token keyword\">select</span> to_char<span class=\"token punctuation\">(</span><span class=\"token number\">2341212412</span><span class=\"token punctuation\">,</span><span class=\"token string\">'$999,999,999,999.00'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 第二个参数的长度必须大于第一个参数</span>\n<span class=\"token keyword\">select</span> to_char<span class=\"token punctuation\">(</span><span class=\"token number\">2341212412</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L999,999,999,999.00'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 与日期的转换</span>\n<span class=\"token comment\">-- to_char(c1,c2) c1: 日期类型的值 c2:日期格式 按照c2指定的日期格式,从c1中取值</span>\n\n<span class=\"token comment\">-- 查询当前系统时间的月份</span>\n<span class=\"token keyword\">select</span> to_char<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token string\">'month'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 查询当前系统时间的年月日</span>\n<span class=\"token keyword\">select</span> to_char<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token string\">'yyyy-mm-dd'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 查询当前系统时间是本年度第几天</span>\n<span class=\"token keyword\">select</span> to_char<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token string\">'yyyy-ddd-dd-d'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>对比to_date 和to_char:<br>to_date(‘2017’,’yyyy’) 将字符串转变成日期 第一个参数是:字符串类型的值<br>to_char(sysdate,’yyyy’) 按照指定的格式将日期转变为字符串 第一个参数是:日期值</p>\n</li>\n</ol>\n<h3 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h3><ul>\n<li>minus从第一个查询结果中,减去第二个查询结果中重复出现的数据 剩余:第一个查询结果中的部分数据<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> ename <span class=\"token operator\">like</span> <span class=\"token string\">'%E%'</span>\nminus \n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> ename <span class=\"token operator\">like</span> <span class=\"token string\">'%S%'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n<li>intersect 交集<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> ename <span class=\"token operator\">like</span> <span class=\"token string\">'%E%'</span>\n<span class=\"token keyword\">intersect</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> ename <span class=\"token operator\">like</span> <span class=\"token string\">'%S%'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"创建表同时复制数据\"><a href=\"#创建表同时复制数据\" class=\"headerlink\" title=\"创建表同时复制数据\"></a>创建表同时复制数据</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> 新表名<span class=\"token punctuation\">(</span>列名<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">select</span> 列名 <span class=\"token keyword\">from</span> 旧表 <span class=\"token keyword\">where</span> 条件<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 如果表已存在，可以向已存在的表中插入数据：</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> 表名<span class=\"token punctuation\">(</span>列名<span class=\"token punctuation\">)</span> <span class=\"token keyword\">select</span> 列名 <span class=\"token keyword\">from</span> 旧表 <span class=\"token keyword\">where</span> 条件<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n<h3 id=\"有则更新-无则新增\"><a href=\"#有则更新-无则新增\" class=\"headerlink\" title=\"有则更新 无则新增\"></a>有则更新 无则新增</h3><p>根据源表对目标表进行匹配查询，匹配成功时更新，不成功时插入</p>\n<p>语法<br>MERGE INTO 目标表 a USING 源表 b ON (a.字段1 &#x3D; b.字段2 and a.字段n &#x3D; b.字段n)<br>WHEN MATCHED THEN UPDATE SET a.新字段 &#x3D; b.字段 WHERE 限制条件 WHEN NOT MATCHED THEN INSERT (a.字段名1，a.字段名n) VALUES(b.字段值1, b.字段值n) WHERE 限制条件123456789<br>例子:</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">MERGE</span> <span class=\"token keyword\">INTO</span> T_SCHE_PYTHON_JOB T1\n<span class=\"token keyword\">USING</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token string\">'1001'</span> <span class=\"token keyword\">AS</span> JOB_DEF_ID <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">)</span> T2\n<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span> T1<span class=\"token punctuation\">.</span>JOB_DEF_ID<span class=\"token operator\">=</span>T2<span class=\"token punctuation\">.</span>JOB_DEF_ID<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">WHEN</span> <span class=\"token keyword\">MATCHED</span> <span class=\"token keyword\">THEN</span>\n    <span class=\"token keyword\">UPDATE</span> <span class=\"token keyword\">SET</span> T1<span class=\"token punctuation\">.</span>param <span class=\"token operator\">=</span> $&#123;param&#125;\n<span class=\"token keyword\">WHEN</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">MATCHED</span> <span class=\"token keyword\">THEN</span> \n    <span class=\"token keyword\">INSERT</span> <span class=\"token punctuation\">(</span>JOB_DEF_ID<span class=\"token punctuation\">,</span>param<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token number\">1001</span><span class=\"token punctuation\">,</span>$&#123;param&#125;<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","more":"<h3 id=\"Sys和System用户区别\"><a href=\"#Sys和System用户区别\" class=\"headerlink\" title=\"Sys和System用户区别\"></a>Sys和System用户区别</h3><ul>\n<li>Sys:拥有DBA、SysDBA、Sysoper（系统操作员）角色或权限，是Oracle权限最高的用户，只能以SysDBA或Sysoper登录，不能以Normal形式登录。</li>\n<li>System:拥有DBA、Sysdba权限或角色，可以以普通用户的身份登录。</li>\n</ul>\n<h3 id=\"Sysdba、Sysoper、DBA区别\"><a href=\"#Sysdba、Sysoper、DBA区别\" class=\"headerlink\" title=\"Sysdba、Sysoper、DBA区别\"></a>Sysdba、Sysoper、DBA区别</h3><ul>\n<li>Sysdba用户:可以改变字符集、创建删除数据库、登录之后用户是SYS（shutdown、startup）</li>\n<li>Sysoper:用户不可改变字符集、不能创、删数据库、登陆之后用户是PUBLIC（shutdown、startup）</li>\n<li>DBA用户：只有在启动数据库后才能执行各种管理工作。</li>\n<li>Sysdba&gt; Sysoper&gt;普通的DBA</li>\n</ul>\n<h3 id=\"Oracle中的角色\"><a href=\"#Oracle中的角色\" class=\"headerlink\" title=\"Oracle中的角色\"></a>Oracle中的角色</h3><ol>\n<li>CONNECT</li>\n<li>RESOURCE</li>\n<li>DBA</li>\n<li>EXP_FULL_DATABASE</li>\n<li>IMP_FULL_DATABASE</li>\n<li>DELETE_CATALOG_ROLE</li>\n<li>EXECUTE_CATALOG_ROLE</li>\n<li>SELECT_CATALOG_ROLE</li>\n</ol>\n<p><strong>CONNECT角色</strong>：–是授予最终用户的典型权利，最基本的</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token number\">1.</span> <span class=\"token keyword\">ALTER</span> <span class=\"token keyword\">SESSION</span> <span class=\"token comment\">--修改会话</span>\n<span class=\"token number\">2.</span> <span class=\"token keyword\">CREATE</span> CLUSTER <span class=\"token comment\">--建立聚簇</span>\n<span class=\"token number\">3.</span> <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">DATABASE</span> LINK <span class=\"token comment\">--建立数据库链接</span>\n<span class=\"token number\">4.</span> <span class=\"token keyword\">CREATE</span> SEQUENCE <span class=\"token comment\">--建立序列</span>\n<span class=\"token number\">5.</span> <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">SESSION</span> <span class=\"token comment\">--建立会话</span>\n<span class=\"token number\">6.</span> <span class=\"token keyword\">CREATE</span> SYNONYM <span class=\"token comment\">--建立同义词</span>\n<span class=\"token number\">7.</span> <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> <span class=\"token comment\">--建立视图www_bitscn_com中国.网管联盟</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>RESOURCE角色</strong>： –是授予开发人员的</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token number\">1.</span> <span class=\"token keyword\">CREATE</span> CLUSTER <span class=\"token comment\">--建立聚簇</span>\n<span class=\"token number\">2.</span> <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">PROCEDURE</span> <span class=\"token comment\">--建立过程</span>\n<span class=\"token number\">3.</span> <span class=\"token keyword\">CREATE</span> SEQUENCE <span class=\"token comment\">--建立序列</span>\n<span class=\"token number\">4.</span> <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token comment\">--建表</span>\n<span class=\"token number\">5.</span> <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TRIGGER</span> <span class=\"token comment\">--建立触发器</span>\n<span class=\"token number\">6.</span> <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TYPE</span> <span class=\"token comment\">--建立类型</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>DBA角色</strong>：拥有系统所有系统级权限（系统管理员）</p>\n<p><strong>IMP_FULL_DATABASE角色、EXP_FULL_DATABASE角色</strong>：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token number\">1.</span> <span class=\"token keyword\">BACKUP</span> <span class=\"token keyword\">ANY</span> <span class=\"token keyword\">TABLE</span> <span class=\"token comment\">--备份任何表</span>\n<span class=\"token number\">2.</span> <span class=\"token keyword\">EXECUTE</span> <span class=\"token keyword\">ANY</span> <span class=\"token keyword\">PROCEDURE</span> <span class=\"token comment\">--执行任何操作</span>\n<span class=\"token number\">3.</span> <span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">ANY</span> <span class=\"token keyword\">TABLE</span> <span class=\"token comment\">--查询任何表</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>SELECT_CATALOG_ROLE角色</strong>具有从数据字典查询的权利，<br>(尤其是此处数据字典：就是数据库运行时的各种信息参考：Oracle 11g体系结构–数据字典)</p>\n<p><strong>EXECUTE_CATALOG_ROLE</strong>角色具有从数据字典中执行部分过程和函数的权利。</p>\n<h3 id=\"分区表\"><a href=\"#分区表\" class=\"headerlink\" title=\"分区表\"></a>分区表</h3><p>当表中的数据量不断增大，查询数据的速度就会变慢，应用程序的性能就会下降，这时就应该考虑对表进行分区。表进行分区后，逻辑上表仍然是一张完整的表，只是将表中的数据在物理上存放到多个表空间(物理文件上)，这样查询数据时，不至于每次都扫描整张表。</p>\n<h3 id=\"PL-x2F-SQL-x2F-Oracle乱码问题解决方案\"><a href=\"#PL-x2F-SQL-x2F-Oracle乱码问题解决方案\" class=\"headerlink\" title=\"PL&#x2F;SQL &#x2F;Oracle乱码问题解决方案\"></a>PL&#x2F;SQL &#x2F;Oracle乱码问题解决方案</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">Select</span> userenv<span class=\"token punctuation\">(</span>‘<span class=\"token keyword\">language</span>’<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span> <span class=\"token comment\">-- 查看服务器端编码</span>\n\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> V$NLS_PARAMETERS；<span class=\"token comment\">-- 查看NLS_LANGUAGE的值与第一个的查询结果是否一致，假如不一致需要设置环境变量，变量名：NLS_LANG 变量值：第1个查到的值 重启PL/SQL(假如在乱码之前已经插入数据，那么配置环境变量后依然乱码，需要删除数据重新导入)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"Oracle的操作\"><a href=\"#Oracle的操作\" class=\"headerlink\" title=\"Oracle的操作\"></a>Oracle的操作</h3><ol>\n<li>cmd进入oracle <pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">sqlplus 账户名<span class=\"token operator\">/</span>密码 <span class=\"token keyword\">as</span> 角色名 <span class=\"token comment\">--（sys用户必须带as sysdba）例:sqlplus sys/admin as sysdba</span>\n\n<span class=\"token keyword\">exit</span> <span class=\"token comment\">--退出</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n<li>用户账号相关操作<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 创建用户</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">user</span> xxx identified <span class=\"token keyword\">by</span> xxx<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 授权</span>\n<span class=\"token keyword\">grant</span> <span class=\"token keyword\">create</span> <span class=\"token keyword\">session</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">connect</span><span class=\"token punctuation\">,</span> resource <span class=\"token keyword\">to</span> xxx<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 删除用户 加cascade可以一同删除用户数据</span>\n<span class=\"token keyword\">drop</span> <span class=\"token keyword\">user</span> username <span class=\"token keyword\">cascade</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 解锁登陆账号</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">user</span> scott account <span class=\"token keyword\">unlock</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 冻结登陆账号</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">user</span> dbaName account <span class=\"token keyword\">lock</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 修改登录账号密码</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">user</span> dbaName identified <span class=\"token keyword\">by</span> <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 查看所有用户相关信息</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> DBA_USERS<span class=\"token punctuation\">;</span><span class=\"token comment\">-- 查询DBA用户</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> ALL_USERS<span class=\"token punctuation\">;</span><span class=\"token comment\">-- 查询所有用户</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> USER_USERS<span class=\"token punctuation\">;</span><span class=\"token comment\">-- 查询系统用户</span>\n\n<span class=\"token comment\">-- 查看用户系统权限</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> DBA_SYS_PRIVS<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> USER_SYS_PRIVS<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 查看用户对象或角色权限</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> DBA_TAB_PRIVS<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> ALL_TAB_PRIVS<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> USER_TAB_PRIVS<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 查看所有角色</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> DBA_ROLES<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 查看用户或角色所拥有的角色</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> DBA_ROLE_PRIVS<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> USER_ROLE_PRIVS<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> role_sys_privs<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>表空间相关<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">Select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Dba_Tablespaces<span class=\"token punctuation\">;</span> <span class=\"token comment\">-- 查看所有的表空间</span>\n<span class=\"token keyword\">Select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> DBA_DATA_FILES<span class=\"token punctuation\">;</span> <span class=\"token comment\">-- 查看所有的表空间以及对应的地址</span>\n\n<span class=\"token comment\">-- 创建临时表空间</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">temporary</span> <span class=\"token keyword\">tablespace</span> user_temp\ntempfile <span class=\"token string\">'D:\\APP\\ADMINISTRATOR\\ORADATA\\ORCL\\user_temp.dbf'</span>\nsize <span class=\"token number\">50</span>m  <span class=\"token comment\">--初始空间50m</span>\nautoextend <span class=\"token keyword\">on</span> <span class=\"token comment\">-- on为表空间自动扩展</span>\n<span class=\"token keyword\">next</span> <span class=\"token number\">50</span>m maxsize <span class=\"token number\">20480</span>m <span class=\"token comment\">-- 每次50m最大2048m</span>\nextent management <span class=\"token keyword\">local</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">-- 本地管理表空间</span>\n\n<span class=\"token comment\">-- 创建数据表空间</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">tablespace</span> user_data\nlogging\ndatafile <span class=\"token string\">'D:\\APP\\ADMINISTRATOR\\ORADATA\\ORCL\\user_data.dbf'</span>\nsize <span class=\"token number\">50</span>m\nautoextend <span class=\"token keyword\">on</span>\n<span class=\"token keyword\">next</span> <span class=\"token number\">50</span>m maxsize <span class=\"token number\">20480</span>m\nextent management <span class=\"token keyword\">local</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 创建用户指定表空间</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">user</span> 用户名 identified <span class=\"token keyword\">by</span> 密码 <span class=\"token keyword\">default</span> <span class=\"token keyword\">tablespace</span> 表空间名；<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n<h3 id=\"Oracle相关函数\"><a href=\"#Oracle相关函数\" class=\"headerlink\" title=\"Oracle相关函数\"></a>Oracle相关函数</h3><h4 id=\"wm-concat-行转列\"><a href=\"#wm-concat-行转列\" class=\"headerlink\" title=\"wm_concat()行转列\"></a>wm_concat()行转列</h4><p>wm_concat()函数是oracle中独有的,mysql中有一个group_concat()函数。这两个函数的作用是相同的，它们的功能是：实现行转列功能，即将查询出的某一列值使用逗号进行隔开拼接，成为一条数据</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 根据年龄获取学生的分数</span>\n<span class=\"token keyword\">select</span> age<span class=\"token punctuation\">,</span>to_char<span class=\"token punctuation\">(</span>wm_concat<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> name<span class=\"token punctuation\">,</span>to_char<span class=\"token punctuation\">(</span>wm_concat<span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> score <span class=\"token keyword\">from</span> student t <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> age<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- age  name     score</span>\n<span class=\"token comment\">-- 18  张三,李四  81,82</span>\n<span class=\"token comment\">-- 19  王五,赵六  67,90</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"decode\"><a href=\"#decode\" class=\"headerlink\" title=\"decode\"></a>decode</h4><p>decode(c1,c2,c3)&#x2F;decode(c1,c2,c3,c4)&#x2F;decode(c1,c2,c3,c4,c5)&#x2F;decode(c1,[c2,c3],[c4,c5],[c6,c7]….,[C2x,C2x+1] [,C2x+2])<br>从c1之后开始,每两个参数看做是一组数,拿每组数的第一个参数和c1比较,如果相同则返回第二个参数:比如 如果c2&#x3D;&#x3D;c1 return c3如果该组数的第一个参数和c1不相同,则比较下一组:比如 如果c2&lt;&gt;C1继续判断C4&#x3D;&#x3D;C1? 相同return c5<br>例  decode(type,’a’,’11’,’b’,’12’,’c’,’13’,’d’,’14’,’e’,’15’,type)</p>\n<h4 id=\"树形查询\"><a href=\"#树形查询\" class=\"headerlink\" title=\"树形查询\"></a>树形查询</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> area_code <span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> tableA <span class=\"token keyword\">where</span> isvalid<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">start</span> <span class=\"token keyword\">with</span> area_code <span class=\"token operator\">=</span> <span class=\"token number\">5002</span> <span class=\"token keyword\">connect</span> <span class=\"token keyword\">by</span>  prior parent_area_code <span class=\"token operator\">=</span> area_code<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 父子关系查询（start with connect by prior）</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> tabname t <span class=\"token keyword\">where</span> 条件 <span class=\"token keyword\">start</span> <span class=\"token keyword\">with</span> t<span class=\"token punctuation\">.</span>org_parent_code<span class=\"token operator\">=</span><span class=\"token string\">'10000008'</span> <span class=\"token keyword\">connect</span> <span class=\"token keyword\">by</span> t<span class=\"token punctuation\">.</span>org_code <span class=\"token operator\">=</span> prior t<span class=\"token punctuation\">.</span>org_parent_code<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"数值函数\"><a href=\"#数值函数\" class=\"headerlink\" title=\"数值函数\"></a>数值函数</h4><ol>\n<li>mod(x,y) 取模 求余数</li>\n<li>nvl(x,y) 如果x的值为空,则返回y<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span>sal<span class=\"token punctuation\">,</span>comm<span class=\"token punctuation\">,</span>sal<span class=\"token operator\">+</span>nvl<span class=\"token punctuation\">(</span>comm<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 数值列可以直接做加减乘除运算,如果数值列值为null则加减乘除后也是null需要使用nvl函数去空</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ol>\n<h4 id=\"精确指定位数的函数\"><a href=\"#精确指定位数的函数\" class=\"headerlink\" title=\"精确指定位数的函数\"></a>精确指定位数的函数</h4><ol>\n<li>round(c1,c2) 能够四舍五入</li>\n<li>trunc(c1,c2) 直接舍去</li>\n<li>c2&gt;0 : c2表示有多少位小数<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">21.23512</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>   <span class=\"token comment\">--  21.24</span>\n<span class=\"token keyword\">select</span> trunc<span class=\"token punctuation\">(</span><span class=\"token number\">21.23512</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>   <span class=\"token comment\">--  21.23</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li>c2&lt;0 : c2表示小数点向左精确|c2|位<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">2163.512</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>  <span class=\"token comment\">--  2200</span>\n<span class=\"token keyword\">select</span> trunc<span class=\"token punctuation\">(</span><span class=\"token number\">2163.512</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>  <span class=\"token comment\">--  2100</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li>c2如果不存在,表示只保留整数部分<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">2163.512</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>  <span class=\"token comment\">--  2164</span>\n<span class=\"token keyword\">select</span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">2163.512</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>    <span class=\"token comment\">-- 2164</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ol>\n<h4 id=\"字符函数\"><a href=\"#字符函数\" class=\"headerlink\" title=\"字符函数\"></a>字符函数</h4><ul>\n<li><p>length() 求字符串长度</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 查询姓名长度为5个字符的员工姓名</span>\n<span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span>length<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> length<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li><p>lower() 全部转为小写</p>\n</li>\n<li><p>upper() 全部转为大写</p>\n</li>\n<li><p>initcap() 单词首字母大写其他字母小写</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span>lower<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>upper<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>initcap<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> emp<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li><p>截取字符串:substr(c1,c2[,c3]) c1: 原字符串 c2: 从哪个位置开始截取 c3: 截取长度(默认截取到最后)</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 查询员工姓名,截取员工姓名的第一个字符,再截取姓名的最后一个字符</span>\n<span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span>sal<span class=\"token punctuation\">,</span>substr<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>substr<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">,</span>length<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 查询员工姓名,截取员工姓名中最中间的一个字符(偶数个截取后一位)</span>\n<span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span> substr<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">,</span>trunc<span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>索引字符串:instr(c1,c2,c3,c4) c1: 原字符串 c2: 要查找的字符串 c3: 从哪个位置开始查找 默认值1 c4: 第几次出现 默认值1</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 查询员工姓名中带有E字符的员工</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> ename <span class=\"token operator\">like</span> <span class=\"token string\">'%E%'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> instr<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">,</span><span class=\"token string\">'E'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;></span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">select</span> instr<span class=\"token punctuation\">(</span><span class=\"token string\">'sanhaoxuesheng'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'aow'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- instr能够用来替代like实现模糊查询</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> instr<span class=\"token punctuation\">(</span>ename<span class=\"token punctuation\">,</span><span class=\"token string\">'%'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;></span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">--</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>拼接字符串: 符号: || 函数: concat(c1,c2) 将c1 c2拼接为一个字符串</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> concat<span class=\"token punctuation\">(</span>concat<span class=\"token punctuation\">(</span><span class=\"token string\">'123'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'abc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'eee'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">select</span> <span class=\"token string\">'123'</span> <span class=\"token operator\">||</span> <span class=\"token string\">'abc'</span> <span class=\"token operator\">||</span> <span class=\"token string\">'eee'</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ul>\n<h4 id=\"日期函数\"><a href=\"#日期函数\" class=\"headerlink\" title=\"日期函数\"></a>日期函数</h4><p>两个日期之间可以做减法,单位是天 两个日期之间不能做加法</p>\n<ul>\n<li>add_months(c1,c2) c1日期类型,c2整数在c1日期的基础上增减c2个月份<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 查询当前系统时间之前的一个月</span>\n<span class=\"token keyword\">select</span> add_months<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 查询十年后的今天</span>\n<span class=\"token keyword\">select</span> add_months<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token number\">120</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>months_between(c1,c2) c1 c2都是日期类型 计算两个日期之间相差多少个月份<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span>months_between<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span>hiredate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>last_day(c)<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 查询给定日期所在月份的最后一天</span>\n<span class=\"token keyword\">select</span> last_day<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 查询下一个月的第一天 </span>\n<span class=\"token keyword\">select</span> last_day<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 查询上一个月的第一天 </span>\n<span class=\"token keyword\">select</span> last_day<span class=\"token punctuation\">(</span>add_months<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>计算日期:<br>round(c1,c2)  四舍五入 trunc(c1,c2)  直接舍去<br>c1:日期类型的值  c2:字符类型,日期格式 在c1日期的基础上,精确到c2指定的日期格式 如果比c2低的日期格式,默认是初始值</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 将当前系统时间精确到年份</span>\n<span class=\"token keyword\">select</span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token string\">'yyyy'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 如果当前时间是: 2017-2-11 13:00:00 //2017-1-1 00:00:00</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<ol start=\"5\">\n<li>查询本年度的一季度的起始日期<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> trunc<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token string\">'yyyy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>add_months<span class=\"token punctuation\">(</span>trunc<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token string\">'yyyy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n<li>next_day(c1,c2) c1: 日期类型  c2:字符或整数: 周期值 从c1日期来时,查找c2指定的周期的日期<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 查询当前系统时间之后的第一个星期一</span>\n<span class=\"token keyword\">select</span> sysdate<span class=\"token punctuation\">,</span>next_day<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token string\">'星期四'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ol>\n<h4 id=\"转换函数\"><a href=\"#转换函数\" class=\"headerlink\" title=\"转换函数\"></a>转换函数</h4><ol>\n<li><p>to_date(c1,c2)</p>\n</li>\n<li><p>to_timestamp(c1,c2) c1: 字符类型的日期 c2:日期格式<br>能够根据c2指定的格式将c1字符类型的日期转变为日期类型</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> emp<span class=\"token punctuation\">(</span>empno<span class=\"token punctuation\">,</span>hiredate<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">1001</span><span class=\"token punctuation\">,</span> to_date<span class=\"token punctuation\">(</span><span class=\"token string\">'2017-1-1'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'yyyy-dd-mm'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> emp<span class=\"token punctuation\">(</span>empno<span class=\"token punctuation\">,</span>hiredate<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span><span class=\"token punctuation\">(</span><span class=\"token number\">1002</span><span class=\"token punctuation\">,</span> to_date<span class=\"token punctuation\">(</span><span class=\"token string\">'2017-1-1 12:21:20'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'yyyy-dd-mm hh24:mi:ss'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li><p>to_char()</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token comment\">-- 将一个数值转变为一个字符串</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> <span class=\"token string\">'1'</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> <span class=\"token string\">'1'</span><span class=\"token operator\">=</span>to_char<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 格式化字符串或数值</span>\n<span class=\"token keyword\">select</span> to_char<span class=\"token punctuation\">(</span><span class=\"token number\">2341212412</span><span class=\"token punctuation\">,</span><span class=\"token string\">'$999,999,999,999.00'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 第二个参数的长度必须大于第一个参数</span>\n<span class=\"token keyword\">select</span> to_char<span class=\"token punctuation\">(</span><span class=\"token number\">2341212412</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L999,999,999,999.00'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- 与日期的转换</span>\n<span class=\"token comment\">-- to_char(c1,c2) c1: 日期类型的值 c2:日期格式 按照c2指定的日期格式,从c1中取值</span>\n\n<span class=\"token comment\">-- 查询当前系统时间的月份</span>\n<span class=\"token keyword\">select</span> to_char<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token string\">'month'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 查询当前系统时间的年月日</span>\n<span class=\"token keyword\">select</span> to_char<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token string\">'yyyy-mm-dd'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 查询当前系统时间是本年度第几天</span>\n<span class=\"token keyword\">select</span> to_char<span class=\"token punctuation\">(</span>sysdate<span class=\"token punctuation\">,</span><span class=\"token string\">'yyyy-ddd-dd-d'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> dual<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>对比to_date 和to_char:<br>to_date(‘2017’,’yyyy’) 将字符串转变成日期 第一个参数是:字符串类型的值<br>to_char(sysdate,’yyyy’) 按照指定的格式将日期转变为字符串 第一个参数是:日期值</p>\n</li>\n</ol>\n<h3 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h3><ul>\n<li>minus从第一个查询结果中,减去第二个查询结果中重复出现的数据 剩余:第一个查询结果中的部分数据<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> ename <span class=\"token operator\">like</span> <span class=\"token string\">'%E%'</span>\nminus \n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> ename <span class=\"token operator\">like</span> <span class=\"token string\">'%S%'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n<li>intersect 交集<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> ename <span class=\"token operator\">like</span> <span class=\"token string\">'%E%'</span>\n<span class=\"token keyword\">intersect</span>\n<span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> ename <span class=\"token operator\">like</span> <span class=\"token string\">'%S%'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"创建表同时复制数据\"><a href=\"#创建表同时复制数据\" class=\"headerlink\" title=\"创建表同时复制数据\"></a>创建表同时复制数据</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> 新表名<span class=\"token punctuation\">(</span>列名<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">select</span> 列名 <span class=\"token keyword\">from</span> 旧表 <span class=\"token keyword\">where</span> 条件<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">-- 如果表已存在，可以向已存在的表中插入数据：</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> 表名<span class=\"token punctuation\">(</span>列名<span class=\"token punctuation\">)</span> <span class=\"token keyword\">select</span> 列名 <span class=\"token keyword\">from</span> 旧表 <span class=\"token keyword\">where</span> 条件<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n<h3 id=\"有则更新-无则新增\"><a href=\"#有则更新-无则新增\" class=\"headerlink\" title=\"有则更新 无则新增\"></a>有则更新 无则新增</h3><p>根据源表对目标表进行匹配查询，匹配成功时更新，不成功时插入</p>\n<p>语法<br>MERGE INTO 目标表 a USING 源表 b ON (a.字段1 &#x3D; b.字段2 and a.字段n &#x3D; b.字段n)<br>WHEN MATCHED THEN UPDATE SET a.新字段 &#x3D; b.字段 WHERE 限制条件 WHEN NOT MATCHED THEN INSERT (a.字段名1，a.字段名n) VALUES(b.字段值1, b.字段值n) WHERE 限制条件123456789<br>例子:</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">MERGE</span> <span class=\"token keyword\">INTO</span> T_SCHE_PYTHON_JOB T1\n<span class=\"token keyword\">USING</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token string\">'1001'</span> <span class=\"token keyword\">AS</span> JOB_DEF_ID <span class=\"token keyword\">FROM</span> dual<span class=\"token punctuation\">)</span> T2\n<span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span> T1<span class=\"token punctuation\">.</span>JOB_DEF_ID<span class=\"token operator\">=</span>T2<span class=\"token punctuation\">.</span>JOB_DEF_ID<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">WHEN</span> <span class=\"token keyword\">MATCHED</span> <span class=\"token keyword\">THEN</span>\n    <span class=\"token keyword\">UPDATE</span> <span class=\"token keyword\">SET</span> T1<span class=\"token punctuation\">.</span>param <span class=\"token operator\">=</span> $&#123;param&#125;\n<span class=\"token keyword\">WHEN</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">MATCHED</span> <span class=\"token keyword\">THEN</span> \n    <span class=\"token keyword\">INSERT</span> <span class=\"token punctuation\">(</span>JOB_DEF_ID<span class=\"token punctuation\">,</span>param<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token number\">1001</span><span class=\"token punctuation\">,</span>$&#123;param&#125;<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","categories":[{"name":"数据库","path":"api/categories/数据库.json"}],"tags":[]}